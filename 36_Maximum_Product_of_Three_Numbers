class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        negs=[]
        poss=[]
        count0=0
        for i in range(len(nums)):
            if nums[i]==0:
                count0+=1
            elif nums[i]>0:
                poss.append(nums[i])
            elif nums[i]<0:
                negs.append(nums[i])
        if len(negs)+len(poss)<3 or (len(negs)==1 and len(poss)==2):
            return 0
        if len(poss)>=3:
            poss.sort(reverse=True)
            negs.sort()
            if len(negs)>=2:
                return max(poss[0]*poss[1]*poss[2],poss[0]*negs[0]*negs[1])
            return poss[0]*poss[1]*poss[2]
        else:
            if poss:
                negs.sort()
                return max(poss)*negs[0]*negs[1]
            elif count0>0:
                return 0
            else:
                negs.sort(reverse=True)
                return negs[0]*negs[1]*negs[2]