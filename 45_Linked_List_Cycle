# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        # if not head:
        #     return False
        slow=ListNode(0)
        fast=ListNode(0)
        slow.next=head
        fast.next=head
        while slow and fast and slow.next and fast.next and fast.next.next:
            if slow==fast:
                return True
            slow=slow.next
            fast=fast.next
            fast=fast.next
        return False