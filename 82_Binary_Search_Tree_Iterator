# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
def inorder(root,ans):
    if root:
        inorder(root.left,ans)
        ans.append(root.val)
        inorder(root.right,ans)
class BSTIterator:
    x=-1
    a=[]
    i=0
    def __init__(self, root: Optional[TreeNode]):
        self.a=[]
        self.i=-1
        inorder(root,self.a)

    def next(self) -> int:
        self.i+=1
        return self.a[self.i]


    def hasNext(self) -> bool:
        return self.i<len(self.a)-1
        


# Your BSTIterator object will be instantiated and called as such:
# obj = BSTIterator(root)
# param_1 = obj.next()
# param_2 = obj.hasNext()